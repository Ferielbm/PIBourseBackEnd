### PiBourse API - Player & Transaction Management
### Base URL: http://localhost:8084

### ========================================
### PLAYER MANAGEMENT ENDPOINTS
### ========================================

### 1. Get All Players
GET http://localhost:8084/api/players
Accept: application/json

### 2. Get Player by ID
GET http://localhost:8084/api/players/1
Accept: application/json

### 3. Get Player by Email
GET http://localhost:8084/api/players/email/john@example.com
Accept: application/json

### 4. Create New Player
POST http://localhost:8084/api/players
Content-Type: application/json

{
  "username": "alice_trader",
  "email": "alice@example.com",
  "password": "password123",
  "role": "ROLE_PLAYER"
}

### 5. Create Admin Player
POST http://localhost:8084/api/players
Content-Type: application/json

{
  "username": "super_admin",
  "email": "superadmin@pibourse.tn",
  "password": "admin@2024",
  "role": "ROLE_ADMIN"
}

### 6. Update Player (Partial Update)
PUT http://localhost:8084/api/players/1
Content-Type: application/json

{
  "username": "john_pro_trader"
}

### 7. Update Player (Full Update)
PUT http://localhost:8084/api/players/2
Content-Type: application/json

{
  "username": "sarah_master_investor",
  "email": "sarah.new@example.com",
  "password": "newsecurepass123",
  "role": "ROLE_ADMIN"
}

### 8. Delete Player
DELETE http://localhost:8084/api/players/5

### ========================================
### TRANSACTION MANAGEMENT ENDPOINTS
### ========================================

### 9. Get All Transactions
GET http://localhost:8084/api/transactions
Accept: application/json

### 10. Get Transaction by ID
GET http://localhost:8084/api/transactions/1
Accept: application/json

### 11. Get Transactions by Player ID
GET http://localhost:8084/api/transactions/player/1
Accept: application/json

### 12. Create DEPOSIT Transaction
POST http://localhost:8084/api/transactions
Content-Type: application/json

{
  "type": "DEPOSIT",
  "amount": 5000.00,
  "playerId": 1
}

### 13. Create BUY Transaction
POST http://localhost:8084/api/transactions
Content-Type: application/json

{
  "type": "BUY",
  "amount": 1500.50,
  "playerId": 2
}

### 14. Create SELL Transaction
POST http://localhost:8084/api/transactions
Content-Type: application/json

{
  "type": "SELL",
  "amount": 2750.75,
  "playerId": 3
}

### 15. Create WITHDRAW Transaction
POST http://localhost:8084/api/transactions
Content-Type: application/json

{
  "type": "WITHDRAW",
  "amount": 1000.00,
  "playerId": 1
}

### 16. Delete Transaction
DELETE http://localhost:8084/api/transactions/10

### ========================================
### ERROR SCENARIOS (for testing validation)
### ========================================

### 17. Invalid Email (should return 400)
POST http://localhost:8084/api/players
Content-Type: application/json

{
  "username": "test_user",
  "email": "invalid-email",
  "password": "password123",
  "role": "ROLE_PLAYER"
}

### 18. Password Too Short (should return 400)
POST http://localhost:8084/api/players
Content-Type: application/json

{
  "username": "test_user",
  "email": "test@example.com",
  "password": "123",
  "role": "ROLE_PLAYER"
}

### 19. Missing Required Fields (should return 400)
POST http://localhost:8084/api/players
Content-Type: application/json

{
  "username": "test_user"
}

### 20. Negative Transaction Amount (should return 400)
POST http://localhost:8084/api/transactions
Content-Type: application/json

{
  "type": "DEPOSIT",
  "amount": -1000.00,
  "playerId": 1
}

### 21. Non-existent Player ID (should return 404)
POST http://localhost:8084/api/transactions
Content-Type: application/json

{
  "type": "DEPOSIT",
  "amount": 1000.00,
  "playerId": 9999
}

### 22. Get Non-existent Player (should return 404)
GET http://localhost:8084/api/players/9999
Accept: application/json

### ========================================
### SWAGGER & API DOCUMENTATION
### ========================================

### 23. Open Swagger UI in Browser
# http://localhost:8084/swagger-ui.html

### 24. Get OpenAPI JSON
GET http://localhost:8084/api-docs
Accept: application/json

### ========================================
### BULK OPERATIONS EXAMPLE
### ========================================

### 25. Create Multiple Transactions for a Player

# First create a player
POST http://localhost:8084/api/players
Content-Type: application/json

{
  "username": "bulk_trader",
  "email": "bulk@example.com",
  "password": "password123",
  "role": "ROLE_PLAYER"
}

### Then create multiple transactions (use the ID from response above)

# Transaction 1
POST http://localhost:8084/api/transactions
Content-Type: application/json

{
  "type": "DEPOSIT",
  "amount": 10000.00,
  "playerId": 5
}

### Transaction 2
POST http://localhost:8084/api/transactions
Content-Type: application/json

{
  "type": "BUY",
  "amount": 3000.00,
  "playerId": 5
}

### Transaction 3
POST http://localhost:8084/api/transactions
Content-Type: application/json

{
  "type": "SELL",
  "amount": 3500.00,
  "playerId": 5
}

### Transaction 4
POST http://localhost:8084/api/transactions
Content-Type: application/json

{
  "type": "WITHDRAW",
  "amount": 2000.00,
  "playerId": 5
}

### Now get all transactions for this player
GET http://localhost:8084/api/transactions/player/5
Accept: application/json

