### ========================================
### üîê API - MOT DE PASSE OUBLI√â
### ========================================

### Variables
@baseUrl = http://localhost:8084
@email = test@example.com
@token = REPLACER_PAR_LE_TOKEN_RECU_PAR_EMAIL

### ========================================
### 1Ô∏è‚É£ INSCRIPTION (Pr√©requis - cr√©er un utilisateur de test)
### ========================================
POST {{baseUrl}}/api/auth/register
Content-Type: application/json

{
  "username": "testuser",
  "email": "{{email}}",
  "password": "password123",
  "role": "ROLE_PLAYER"
}

### ========================================
### 2Ô∏è‚É£ DEMANDER LA R√âINITIALISATION DU MOT DE PASSE
### ========================================
POST {{baseUrl}}/api/auth/forgot-password
Content-Type: application/json

{
  "email": "{{email}}"
}

### R√©ponse attendue :
# {
#   "message": "Si cet email existe dans notre syst√®me, vous recevrez un lien de r√©initialisation."
# }

### ‚ùó Apr√®s cet appel :
### - V√©rifiez votre bo√Æte email
### - Copiez le token depuis le lien re√ßu
### - Remplacez la variable @token ci-dessus

### ========================================
### 3Ô∏è‚É£ VALIDER LE TOKEN (Optionnel)
### ========================================
GET {{baseUrl}}/api/auth/validate-reset?token={{token}}

### R√©ponse si token valide :
# {
#   "valid": true,
#   "message": "Token valide",
#   "email": "test@example.com"
# }

### R√©ponse si token invalide :
# {
#   "valid": false,
#   "message": "Token invalide"
# }

### ========================================
### 4Ô∏è‚É£ R√âINITIALISER LE MOT DE PASSE
### ========================================
POST {{baseUrl}}/api/auth/reset-password
Content-Type: application/json

{
  "token": "{{token}}",
  "newPassword": "nouveauPassword123"
}

### R√©ponse en cas de succ√®s :
# {
#   "message": "Mot de passe r√©initialis√© avec succ√®s!"
# }

### ========================================
### 5Ô∏è‚É£ SE CONNECTER AVEC LE NOUVEAU MOT DE PASSE
### ========================================
POST {{baseUrl}}/api/auth/login
Content-Type: application/json

{
  "email": "{{email}}",
  "password": "nouveauPassword123"
}

### R√©ponse attendue :
# {
#   "token": "eyJhbGciOiJIUzUxMiJ9...",
#   "id": 1,
#   "username": "testuser",
#   "email": "test@example.com",
#   "role": "ROLE_PLAYER"
# }

### ========================================
### üß™ TESTS DE S√âCURIT√â
### ========================================

### Test 1 : Email inexistant (retourne toujours le m√™me message pour la s√©curit√©)
POST {{baseUrl}}/api/auth/forgot-password
Content-Type: application/json

{
  "email": "emailinexistant@example.com"
}

### Test 2 : Token invalide
POST {{baseUrl}}/api/auth/reset-password
Content-Type: application/json

{
  "token": "token-invalide-123",
  "newPassword": "nouveauPassword123"
}

### Test 3 : Token d√©j√† utilis√© (r√©utiliser le m√™me token)
POST {{baseUrl}}/api/auth/reset-password
Content-Type: application/json

{
  "token": "{{token}}",
  "newPassword": "autrePassword456"
}

### Test 4 : Mot de passe trop court (validation)
POST {{baseUrl}}/api/auth/reset-password
Content-Type: application/json

{
  "token": "{{token}}",
  "newPassword": "123"
}

### ========================================
### üìä FLOW COMPLET DE TEST
### ========================================

### √âTAPE 1 : Cr√©er un compte
POST {{baseUrl}}/api/auth/register
Content-Type: application/json

{
  "username": "flowtest",
  "email": "flowtest@example.com",
  "password": "oldPassword123"
}

### √âTAPE 2 : V√©rifier que la connexion fonctionne
POST {{baseUrl}}/api/auth/login
Content-Type: application/json

{
  "email": "flowtest@example.com",
  "password": "oldPassword123"
}

### √âTAPE 3 : Demander la r√©initialisation
POST {{baseUrl}}/api/auth/forgot-password
Content-Type: application/json

{
  "email": "flowtest@example.com"
}

### √âTAPE 4 : Consulter les logs pour voir le token g√©n√©r√©
### (ou v√©rifier l'email si SMTP configur√©)

### √âTAPE 5 : Valider le token
GET {{baseUrl}}/api/auth/validate-reset?token=VOTRE_TOKEN

### √âTAPE 6 : R√©initialiser avec le token
POST {{baseUrl}}/api/auth/reset-password
Content-Type: application/json

{
  "token": "VOTRE_TOKEN",
  "newPassword": "newPassword123"
}

### √âTAPE 7 : V√©rifier que l'ancien mot de passe ne fonctionne plus
POST {{baseUrl}}/api/auth/login
Content-Type: application/json

{
  "email": "flowtest@example.com",
  "password": "oldPassword123"
}
### ‚ùå Doit √©chouer avec une erreur 401

### √âTAPE 8 : V√©rifier que le nouveau mot de passe fonctionne
POST {{baseUrl}}/api/auth/login
Content-Type: application/json

{
  "email": "flowtest@example.com",
  "password": "newPassword123"
}
### ‚úÖ Doit r√©ussir et retourner un JWT

### ========================================
### üìù NOTES
### ========================================

# Configuration requise dans application.properties :
#
# spring.mail.host=smtp.gmail.com
# spring.mail.port=587
# spring.mail.username=votre-email@gmail.com
# spring.mail.password=votre-mot-de-passe-application
# spring.mail.properties.mail.smtp.auth=true
# spring.mail.properties.mail.smtp.starttls.enable=true
#
# app.password-reset.token-expiration-hours=1
# app.password-reset.frontend-url=http://localhost:4200

### Pour Gmail :
### 1. Activez la validation en 2 √©tapes
### 2. G√©n√©rez un "Mot de passe d'application"
### 3. Utilisez ce mot de passe dans spring.mail.password

### Pour tester en d√©veloppement sans SMTP :
### - Utilisez Mailtrap.io (service gratuit)
### - Ou consultez les logs pour voir le token g√©n√©r√©

### ========================================

